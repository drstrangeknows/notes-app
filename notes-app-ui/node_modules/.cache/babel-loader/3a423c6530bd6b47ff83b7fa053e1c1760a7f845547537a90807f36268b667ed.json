{"ast":null,"code":"var _jsxFileName = \"/Users/ravi/Documents/git-experiment/guvi_webinar/notes-app/notes-app/notes-app-ui/src/App.tsx\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedNote, setSelectedNote] = useState(null);\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5002/api/notes\");\n        const notes = await response.json();\n        setNotes(notes);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchNotes();\n  }, []);\n  const handleNoteClick = note => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n  const handleAddNote = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5002/api/notes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          content\n        })\n      });\n      const newNote = await response.json();\n      setNotes([newNote, ...notes]);\n      setTitle(\"\");\n      setContent(\"\");\n    } catch (e) {}\n    setNotes([newNote, ...notes]);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n  const handleUpdateNote = async event => {\n    event.preventDefault();\n    if (!selectedNote) {\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5002/api/notes/${selectedNote.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          content\n        })\n      });\n      const updatedNote = await response.json();\n      const updatedNotesList = notes.map(note => note.id === selectedNote.id ? updatedNote : note);\n      setNotes(updatedNotesList);\n      setTitle(\"\");\n      setContent(\"\");\n      setSelectedNote(null);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const handleCancel = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n  const deleteNote = (event, noteId) => {\n    event.stopPropagation();\n    const updatedNotes = notes.filter(note => note.id !== noteId);\n    setNotes(updatedNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      onSubmit: event => selectedNote ? handleUpdateNote(event) : handleAddNote(event),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: event => setTitle(event.target.value),\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: event => setContent(event.target.value),\n        placeholder: \"Content\",\n        rows: 10,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), selectedNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        onClick: () => handleNoteClick(note),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => deleteNote(event, note.id),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"VB1fkClPu3jlvzuJZF8O8L7W3ug=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","notes","setNotes","title","setTitle","content","setContent","selectedNote","setSelectedNote","fetchNotes","response","fetch","json","e","console","log","handleNoteClick","note","handleAddNote","event","preventDefault","method","headers","body","JSON","stringify","newNote","handleUpdateNote","id","updatedNote","updatedNotesList","map","handleCancel","deleteNote","noteId","stopPropagation","updatedNotes","filter","className","children","onSubmit","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","onClick","_c","$RefreshReg$"],"sources":["/Users/ravi/Documents/git-experiment/guvi_webinar/notes-app/notes-app/notes-app-ui/src/App.tsx"],"sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\n\ntype Note = {\n  id: number;\n  title: string;\n  content: string;\n};\n\nconst App = () => {\n  const [notes, setNotes] = useState<Note[]>([]);\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const [selectedNote, setSelectedNote] = useState<Note | null>(null);\n\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await fetch(\n          \"http://localhost:5002/api/notes\"\n        );\n\n        const notes: Note[] =\n          await response.json();\n\n        setNotes(notes);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchNotes();\n  }, []);\n\n  const handleNoteClick = (note: Note) => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n  const handleAddNote = async (event: React.FormEvent) => {\n    event.preventDefault();\n    try{\n      const response = await fetch(\n        \"http://localhost:5002/api/notes\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            title,\n            content,\n          }),\n        }\n      );\n\n      const newNote = await response.json();\n\n      setNotes([newNote, ...notes]);\n      setTitle(\"\");\n      setContent(\"\");\n    } catch(e){\n\n    }\n\n    setNotes([newNote, ...notes]);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n\n  const handleUpdateNote = async (event: React.FormEvent) => {\n    event.preventDefault();\n  \n    if (!selectedNote) {\n      return;\n    }\n    try {\n      const response = await fetch(\n        `http://localhost:5002/api/notes/${selectedNote.id}`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            title,\n            content,\n          }),\n        }\n      );\n\n      const updatedNote = await response.json();\n\n      const updatedNotesList = notes.map((note) =>\n        note.id === selectedNote.id\n          ? updatedNote\n          : note\n      );\n\n      setNotes(updatedNotesList);\n      setTitle(\"\");\n      setContent(\"\");\n      setSelectedNote(null);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleCancel = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n\n  const deleteNote = (event: React.MouseEvent, noteId: number) => {\n    event.stopPropagation();\n  \n    const updatedNotes = notes.filter((note) => note.id !== noteId);\n  \n    setNotes(updatedNotes);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <form className=\"note-form\"\n      onSubmit={(event) => (selectedNote ? handleUpdateNote(event) : handleAddNote(event))}>\n        <input\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n          placeholder=\"Title\"\n          required\n        ></input>\n        <textarea\n          value={content}\n          onChange={(event) => setContent(event.target.value)}\n          placeholder=\"Content\"\n          rows={10}\n          required\n        ></textarea>\n        {selectedNote ? (\n          <div className=\"edit-buttons\">\n            <button type=\"submit\">Save</button>\n            <button onClick={handleCancel}>\n              Cancel\n            </button>\n          </div>\n        ) : (\n        <button type=\"submit\">Add Note</button>\n        )}\n      </form>\n      <div className=\"notes-grid\">\n        {notes.map((note) => (\n          <div key={note.id} className=\"note-item\" onClick={() => handleNoteClick(note)}>\n          <div className=\"notes-header\">\n          <button onClick={(event) => deleteNote(event, note.id)}>x</button>\n          </div>\n          <h2>{note.title}</h2>\n          <p>{note.content}</p>\n        </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}